/**
 * Generated by orval v6.11.0 🍺
 * Do not edit manually.
 * OpenAPI definition
 * OpenAPI spec version: v0
 */
import {rest} from "msw";
import {faker} from "@faker-js/faker";

export const getSettLestForPabegyntSoknadMock = () => faker.datatype.boolean();

export const getHentPabegynteSoknaderForBrukerSomErLestMock = () =>
    Array.from({length: faker.datatype.number({min: 1, max: 10})}, (_, i) => i + 1).map(() => ({
        eventTidspunkt: faker.random.word(),
        eventId: faker.random.word(),
        grupperingsId: faker.random.word(),
        tekst: faker.random.word(),
        link: faker.random.word(),
        sikkerhetsnivaa: faker.datatype.number({min: undefined, max: undefined}),
        sistOppdatert: faker.random.word(),
        isAktiv: faker.datatype.boolean(),
    }));

export const getHentPabegynteSoknaderForBrukerMock = () =>
    Array.from({length: faker.datatype.number({min: 1, max: 10})}, (_, i) => i + 1).map(() => ({
        eventTidspunkt: faker.random.word(),
        eventId: faker.random.word(),
        grupperingsId: faker.random.word(),
        tekst: faker.random.word(),
        link: faker.random.word(),
        sikkerhetsnivaa: faker.datatype.number({min: undefined, max: undefined}),
        sistOppdatert: faker.random.word(),
        isAktiv: faker.datatype.boolean(),
    }));

export const getDittNavMetadataRessursMSW = () => [
    rest.post("*/dittnav/pabegynte/lest", (_req, res, ctx) => {
        return res(ctx.delay(1000), ctx.status(200, "Mocked status"), ctx.json(getSettLestForPabegyntSoknadMock()));
    }),
    rest.get("*/dittnav/pabegynte/inaktive", (_req, res, ctx) => {
        return res(
            ctx.delay(1000),
            ctx.status(200, "Mocked status"),
            ctx.json(getHentPabegynteSoknaderForBrukerSomErLestMock())
        );
    }),
    rest.get("*/dittnav/pabegynte/aktive", (_req, res, ctx) => {
        return res(
            ctx.delay(1000),
            ctx.status(200, "Mocked status"),
            ctx.json(getHentPabegynteSoknaderForBrukerMock())
        );
    }),
];
