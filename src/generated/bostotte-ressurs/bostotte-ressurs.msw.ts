/**
 * Generated by orval v6.11.0 🍺
 * Do not edit manually.
 * OpenAPI definition
 * OpenAPI spec version: v0
 */
import {rest} from "msw";
import {faker} from "@faker-js/faker";

export const getHentBostotteMock = () => ({
    bekreftelse: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
    samtykke: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
    utbetalinger: faker.helpers.arrayElement([
        Array.from({length: faker.datatype.number({min: 1, max: 10})}, (_, i) => i + 1).map(() => ({
            kilde: faker.helpers.arrayElement([
                faker.helpers.arrayElement(["bruker", "system", "utdatert"]),
                undefined,
            ]),
            type: faker.helpers.arrayElement([faker.random.word(), undefined]),
            tittel: faker.helpers.arrayElement([faker.random.word(), undefined]),
            organisasjon: faker.helpers.arrayElement([
                {
                    navn: faker.helpers.arrayElement([faker.random.word(), undefined]),
                    organisasjonsnummer: faker.helpers.arrayElement([faker.random.word(), undefined]),
                },
                undefined,
            ]),
            belop: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]),
            netto: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]),
            brutto: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]),
            skattetrekk: faker.helpers.arrayElement([
                faker.datatype.number({min: undefined, max: undefined}),
                undefined,
            ]),
            andreTrekk: faker.helpers.arrayElement([
                faker.datatype.number({min: undefined, max: undefined}),
                undefined,
            ]),
            utbetalingsdato: faker.helpers.arrayElement([faker.random.word(), undefined]),
            periodeFom: faker.helpers.arrayElement([faker.random.word(), undefined]),
            periodeTom: faker.helpers.arrayElement([faker.random.word(), undefined]),
            komponenter: faker.helpers.arrayElement([
                Array.from({length: faker.datatype.number({min: 1, max: 10})}, (_, i) => i + 1).map(() => ({
                    type: faker.helpers.arrayElement([faker.random.word(), undefined]),
                    belop: faker.helpers.arrayElement([
                        faker.datatype.number({min: undefined, max: undefined}),
                        undefined,
                    ]),
                    satsType: faker.helpers.arrayElement([faker.random.word(), undefined]),
                    satsAntall: faker.helpers.arrayElement([
                        faker.datatype.number({min: undefined, max: undefined}),
                        undefined,
                    ]),
                    satsBelop: faker.helpers.arrayElement([
                        faker.datatype.number({min: undefined, max: undefined}),
                        undefined,
                    ]),
                })),
                undefined,
            ]),
            overstyrtAvBruker: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
            mottaker: faker.helpers.arrayElement([faker.helpers.arrayElement(["Husstand", "Kommune"]), undefined]),
        })),
        undefined,
    ]),
    saker: faker.helpers.arrayElement([
        Array.from({length: faker.datatype.number({min: 1, max: 10})}, (_, i) => i + 1).map(() => ({
            kilde: faker.helpers.arrayElement([faker.helpers.arrayElement(["system", "utdatert"]), undefined]),
            type: faker.helpers.arrayElement([faker.random.word(), undefined]),
            dato: faker.helpers.arrayElement([faker.random.word(), undefined]),
            status: faker.helpers.arrayElement([faker.random.word(), undefined]),
            beskrivelse: faker.helpers.arrayElement([faker.random.word(), undefined]),
            vedtaksstatus: faker.helpers.arrayElement([
                faker.helpers.arrayElement(["INNVILGET", "AVSLAG", "AVVIST"]),
                undefined,
            ]),
        })),
        undefined,
    ]),
    stotteFraHusbankenFeilet: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
    samtykkeTidspunkt: faker.helpers.arrayElement([faker.random.word(), undefined]),
});

export const getBostotteRessursMSW = () => [
    rest.get("*/soknader/:behandlingsId/inntekt/bostotte", (_req, res, ctx) => {
        return res(ctx.delay(1000), ctx.status(200, "Mocked status"), ctx.json(getHentBostotteMock()));
    }),
    rest.put("*/soknader/:behandlingsId/inntekt/bostotte", (_req, res, ctx) => {
        return res(ctx.delay(1000), ctx.status(200, "Mocked status"));
    }),
    rest.post("*/soknader/:behandlingsId/inntekt/bostotte/samtykke", (_req, res, ctx) => {
        return res(ctx.delay(1000), ctx.status(200, "Mocked status"));
    }),
];
