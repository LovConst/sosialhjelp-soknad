/**
 * Generated by orval v6.11.0 üç∫
 * Do not edit manually.
 * OpenAPI definition
 * OpenAPI spec version: v0
 */
import {useMutation} from "@tanstack/react-query";
import type {UseMutationOptions, MutationFunction} from "@tanstack/react-query";
import type {SendTilUrlFrontend} from ".././model";
import {axiosInstance} from "../../lib/orval/axios-instance";

// eslint-disable-next-line
type SecondParameter<T extends (...args: any) => any> = T extends (config: any, args: infer P) => any ? P : never;

export const sendSoknad = (behandlingsId: string, options?: SecondParameter<typeof axiosInstance>) => {
    return axiosInstance<SendTilUrlFrontend>({url: `/soknader/${behandlingsId}/actions/send`, method: "post"}, options);
};

export type SendSoknadMutationResult = NonNullable<Awaited<ReturnType<typeof sendSoknad>>>;

export type SendSoknadMutationError = unknown;

export const useSendSoknad = <TError = unknown, TContext = unknown>(options?: {
    mutation?: UseMutationOptions<Awaited<ReturnType<typeof sendSoknad>>, TError, {behandlingsId: string}, TContext>;
    request?: SecondParameter<typeof axiosInstance>;
}) => {
    const {mutation: mutationOptions, request: requestOptions} = options ?? {};

    const mutationFn: MutationFunction<Awaited<ReturnType<typeof sendSoknad>>, {behandlingsId: string}> = (props) => {
        const {behandlingsId} = props ?? {};

        return sendSoknad(behandlingsId, requestOptions);
    };

    return useMutation<Awaited<ReturnType<typeof sendSoknad>>, TError, {behandlingsId: string}, TContext>(
        mutationFn,
        mutationOptions
    );
};
