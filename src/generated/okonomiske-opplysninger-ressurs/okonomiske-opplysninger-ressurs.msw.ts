/**
 * Generated by orval v6.11.0 🍺
 * Do not edit manually.
 * OpenAPI definition
 * OpenAPI spec version: v0
 */
import {rest} from "msw";
import {faker} from "@faker-js/faker";

export const getHentOkonomiskeOpplysningerMock = () => ({
    okonomiskeOpplysninger: faker.helpers.arrayElement([
        Array.from({length: faker.datatype.number({min: 1, max: 10})}, (_, i) => i + 1).map(() => ({
            type: faker.helpers.arrayElement([faker.random.word(), undefined]),
            gruppe: faker.helpers.arrayElement([faker.random.word(), undefined]),
            rader: faker.helpers.arrayElement([
                Array.from({length: faker.datatype.number({min: 1, max: 10})}, (_, i) => i + 1).map(() => ({
                    beskrivelse: faker.helpers.arrayElement([faker.random.word(), undefined]),
                    belop: faker.helpers.arrayElement([
                        faker.datatype.number({min: undefined, max: undefined}),
                        undefined,
                    ]),
                    brutto: faker.helpers.arrayElement([
                        faker.datatype.number({min: undefined, max: undefined}),
                        undefined,
                    ]),
                    netto: faker.helpers.arrayElement([
                        faker.datatype.number({min: undefined, max: undefined}),
                        undefined,
                    ]),
                    avdrag: faker.helpers.arrayElement([
                        faker.datatype.number({min: undefined, max: undefined}),
                        undefined,
                    ]),
                    renter: faker.helpers.arrayElement([
                        faker.datatype.number({min: undefined, max: undefined}),
                        undefined,
                    ]),
                })),
                undefined,
            ]),
            vedleggStatus: faker.helpers.arrayElement([faker.random.word(), undefined]),
            filer: faker.helpers.arrayElement([
                Array.from({length: faker.datatype.number({min: 1, max: 10})}, (_, i) => i + 1).map(() => ({
                    filNavn: faker.helpers.arrayElement([faker.random.word(), undefined]),
                    uuid: faker.helpers.arrayElement([faker.random.word(), undefined]),
                })),
                undefined,
            ]),
        })),
        undefined,
    ]),
    slettedeVedlegg: faker.helpers.arrayElement([
        Array.from({length: faker.datatype.number({min: 1, max: 10})}, (_, i) => i + 1).map(() => ({
            type: faker.helpers.arrayElement([faker.random.word(), undefined]),
            gruppe: faker.helpers.arrayElement([faker.random.word(), undefined]),
            rader: faker.helpers.arrayElement([
                Array.from({length: faker.datatype.number({min: 1, max: 10})}, (_, i) => i + 1).map(() => ({
                    beskrivelse: faker.helpers.arrayElement([faker.random.word(), undefined]),
                    belop: faker.helpers.arrayElement([
                        faker.datatype.number({min: undefined, max: undefined}),
                        undefined,
                    ]),
                    brutto: faker.helpers.arrayElement([
                        faker.datatype.number({min: undefined, max: undefined}),
                        undefined,
                    ]),
                    netto: faker.helpers.arrayElement([
                        faker.datatype.number({min: undefined, max: undefined}),
                        undefined,
                    ]),
                    avdrag: faker.helpers.arrayElement([
                        faker.datatype.number({min: undefined, max: undefined}),
                        undefined,
                    ]),
                    renter: faker.helpers.arrayElement([
                        faker.datatype.number({min: undefined, max: undefined}),
                        undefined,
                    ]),
                })),
                undefined,
            ]),
            vedleggStatus: faker.helpers.arrayElement([faker.random.word(), undefined]),
            filer: faker.helpers.arrayElement([
                Array.from({length: faker.datatype.number({min: 1, max: 10})}, (_, i) => i + 1).map(() => ({
                    filNavn: faker.helpers.arrayElement([faker.random.word(), undefined]),
                    uuid: faker.helpers.arrayElement([faker.random.word(), undefined]),
                })),
                undefined,
            ]),
        })),
        undefined,
    ]),
    isOkonomiskeOpplysningerBekreftet: faker.datatype.boolean(),
});

export const getOkonomiskeOpplysningerRessursMSW = () => [
    rest.get("*/soknader/:behandlingsId/okonomiskeOpplysninger", (_req, res, ctx) => {
        return res(ctx.delay(1000), ctx.status(200, "Mocked status"), ctx.json(getHentOkonomiskeOpplysningerMock()));
    }),
    rest.put("*/soknader/:behandlingsId/okonomiskeOpplysninger", (_req, res, ctx) => {
        return res(ctx.delay(1000), ctx.status(200, "Mocked status"));
    }),
];
