/**
 * Generated by orval v6.11.0 🍺
 * Do not edit manually.
 * OpenAPI definition
 * OpenAPI spec version: v0
 */
import {rest} from "msw";
import {faker} from "@faker-js/faker";

export const getOpprettSoknadMock = () => ({
    clcz3q9580000ecs9hhyebbhf: faker.random.word(),
});

export const getHentXsrfCookieMock = () => faker.datatype.boolean();

export const getHentSamtykkerMock = () =>
    Array.from({length: faker.datatype.number({min: 1, max: 10})}, (_, i) => i + 1).map(() => ({
        type: faker.helpers.arrayElement([faker.random.word(), undefined]),
        verdi: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
    }));

export const getSjekkOmSystemdataErEndretMock = () => faker.datatype.boolean();

export const getSoknadRessursMSW = () => [
    rest.post("*/soknader/:behandlingsId/oppdaterSamtykker", (_req, res, ctx) => {
        return res(ctx.delay(1000), ctx.status(200, "Mocked status"));
    }),
    rest.post("*/soknader/opprettSoknad", (_req, res, ctx) => {
        return res(ctx.delay(1000), ctx.status(200, "Mocked status"), ctx.json(getOpprettSoknadMock()));
    }),
    rest.get("*/soknader/:behandlingsId/xsrfCookie", (_req, res, ctx) => {
        return res(ctx.delay(1000), ctx.status(200, "Mocked status"), ctx.json(getHentXsrfCookieMock()));
    }),
    rest.get("*/soknader/:behandlingsId/hentSamtykker", (_req, res, ctx) => {
        return res(ctx.delay(1000), ctx.status(200, "Mocked status"), ctx.json(getHentSamtykkerMock()));
    }),
    rest.get("*/soknader/:behandlingsId/erSystemdataEndret", (_req, res, ctx) => {
        return res(ctx.delay(1000), ctx.status(200, "Mocked status"), ctx.json(getSjekkOmSystemdataErEndretMock()));
    }),
    rest.delete("*/soknader/:behandlingsId", (_req, res, ctx) => {
        return res(ctx.delay(1000), ctx.status(200, "Mocked status"));
    }),
];
