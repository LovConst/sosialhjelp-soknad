/**
 * Generated by orval v6.11.0 🍺
 * Do not edit manually.
 * OpenAPI definition
 * OpenAPI spec version: v0
 */
import {rest} from "msw";
import {faker} from "@faker-js/faker";

export const getHentSivilstatusMock = () => ({
    kildeErSystem: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
    sivilstatus: faker.helpers.arrayElement([
        faker.helpers.arrayElement(["gift", "ugift", "samboer", "enke", "skilt", "separert"]),
        undefined,
    ]),
    ektefelle: faker.helpers.arrayElement([
        {
            navn: faker.helpers.arrayElement([
                {
                    fornavn: faker.helpers.arrayElement([faker.random.word(), undefined]),
                    mellomnavn: faker.helpers.arrayElement([faker.random.word(), undefined]),
                    etternavn: faker.helpers.arrayElement([faker.random.word(), undefined]),
                    fulltNavn: faker.helpers.arrayElement([faker.random.word(), undefined]),
                },
                undefined,
            ]),
            fodselsdato: faker.helpers.arrayElement([faker.random.word(), undefined]),
            personnummer: faker.helpers.arrayElement([faker.random.word(), undefined]),
        },
        undefined,
    ]),
    harDiskresjonskode: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
    borSammenMed: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
    erFolkeregistrertSammen: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]),
});

export const getSivilstatusRessursMSW = () => [
    rest.get("*/soknader/:behandlingsId/familie/sivilstatus", (_req, res, ctx) => {
        return res(ctx.delay(1000), ctx.status(200, "Mocked status"), ctx.json(getHentSivilstatusMock()));
    }),
    rest.put("*/soknader/:behandlingsId/familie/sivilstatus", (_req, res, ctx) => {
        return res(ctx.delay(1000), ctx.status(200, "Mocked status"));
    }),
];
