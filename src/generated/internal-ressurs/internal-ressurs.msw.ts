/**
 * Generated by orval v6.11.0 🍺
 * Do not edit manually.
 * OpenAPI definition
 * OpenAPI spec version: v0
 */
import {rest} from "msw";
import {faker} from "@faker-js/faker";

export const getGetSelftestMock = () => ({
    appName: faker.random.word(),
    version: faker.random.word(),
    result: faker.helpers.arrayElement(["OK", "WARNING", "ERROR"]),
    dependencyCheckResults: Array.from({length: faker.datatype.number({min: 1, max: 10})}, (_, i) => i + 1).map(() => ({
        endpoint: faker.random.word(),
        result: faker.helpers.arrayElement(["OK", "WARNING", "ERROR"]),
        address: faker.random.word(),
        errorMessage: faker.helpers.arrayElement([faker.random.word(), undefined]),
        type: faker.helpers.arrayElement(["REST", "DB"]),
        importance: faker.helpers.arrayElement(["CRITICAL", "WARNING"]),
        responseTime: faker.helpers.arrayElement([faker.random.word(), undefined]),
    })),
});

export const getIsAliveMock = () => faker.random.word();

export const getInternalRessursMSW = () => [
    rest.get("*/internal/selftest", (_req, res, ctx) => {
        return res(ctx.delay(1000), ctx.status(200, "Mocked status"), ctx.json(getGetSelftestMock()));
    }),
    rest.get("*/internal/isAlive", (_req, res, ctx) => {
        return res(ctx.delay(1000), ctx.status(200, "Mocked status"), ctx.text(getIsAliveMock()));
    }),
];
